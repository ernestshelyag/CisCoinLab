extends _assets/template

block title
    title personal

block body
    body#per
        <!--[if lt IE 8]>
        p(style="padding: 20px;")
            | Вы используете старую версию браузера.
            | Пожалуйста
            a(href='http://browsehappy.com/', style="padding: 0 5px; font-weight: bold; text-transform: uppercase; color: blue;") обновите ваш браузер
            | перейдя по ссылке.
        <![endif]-->

        span.preloader
        span.vertical Пожалуйста разверните устройство вертикально

        +b.HEADER.header
            .wrp
                +e.DIV.block
                    +e.A.logo-link(href="/")
                        +e.IMG.logo-img(src="img/logo.svg")
                +e.DIV.block
                    +e.NAV.nav
                        +e.A.link(href="index.html") Главная
                        +e.A.link(href="about.html") О проекте
                        +e.A.link(href="reqs.html") Условия
                +e.DIV.block
                    +e.A.personal(href="personal.html")
                        +e.IMG.per-img(src="img/guy.svg")
                        +e.SPAN.per-text Личный кабинет
                    +e.DIV.lang-block
                        +e.DIV.lang-btn
                            +e.SPAN.mask
                            +e.IMG.btn-img(src="img/icon8.png")
                        +e.DIV.lang-menu
                            +e.A.lang-link(href="#")
                                +e.IMG.link-img(src="img/icon8.png")
                            +e.A.lang-link(href="#")
                                +e.IMG.link-img(src="img/icon8.png")
                            +e.A.lang-link(href="#")
                                +e.IMG.link-img(src="img/icon8.png")
                            +e.A.lang-link(href="#")
                                +e.IMG.link-img(src="img/icon8.png")
                +e.DIV.block.header__block_hidden
                    +e.SPAN.menu-btn Меню
                    +e.DIV.hidden-list-block
                        +e.SPAN.close-btn
                        +b.UL.hidden-list
                            +e.LI.item
                                +e.A.link(href="index.html") Главная
                            +e.LI.item
                                +e.A.link(href="about.html") О проекте
                            +e.LI.item
                                +e.A.link(href="reqs.html") Условия
                            +e.LI.item
                                +e.A.link.js-popup-lang-modal(href="#") Язык / RU
                            +e.LI.item
                                +socials()
                            +e.LI.item
                                +b.A.mail-link(href="#")
                                    +e.IMG.mail-img(src="img/mail.svg")
                                    +e.SPAN.text ciscoinlab@yahoo.com
        #container
        +b.MAIN.main.personal
            +e.SECTION.page
                +e.DIV.content
                    h2.pers-title Личный кабинет
                    +b.DIV.pers-box
                        +e.scroll-table-block.this-scroll-content
                            +table()
                    .custom-scrollbar
                        .scroll-element_outerw
                            .scroll-element_size
                            .scroll-element_track
                            .scroll-bar
                    +b.DIV.pers-pagination-block
                        +e.SPAN.double-arrow &#171
                        +e.SPAN.arrow &#8249
                        span 1
                        span 2
                        span ...
                        span 57
                        span 58
                        +e.SPAN.arrow &#8250
                        +e.SPAN.double-arrow &#187

            +e.SECTION.page
                +e.DIV.content
                    h2.pers-title Личные данные
                    +b.DIV.pers-box
                        +b.FORM.pass-form
                            +e.DIV.item
                                +e.SPAN.text Ваш e-mail
                                +e.INPUT.input(type='email' name="pers-email" placeholder='mr.smith@gmail.com')
                            +e.DIV.item
                                +e.SPAN.text Ваш пароль
                                +e.INPUT.input#pass(type='password' name="old-password" placeholder='old-password')
                                +e.SPAN.eye#eye
                            +e.DIV.item
                                +e.SPAN.text Новый пароль
                                +e.INPUT.input(type='text' name="new-password" placeholder='password')
                            +e.DIV.item
                                +e.SPAN.text
                                    | Подтвердить
                                    br
                                    | Пароль
                                +e.INPUT.input(type='text' name="new-password-conf" placeholder='password')
                            +e.DIV.submit-block
                                +e.INPUT.submit(type="submit" value="Сохранить")
            +e.SECTION.page
                +e.DIV.content
                    h2.pers-title Выход
                    +b.DIV.pers-box.exit
                        +e.P.exit-text
                            | Вы действительно хотите покинуть личный кабинет?
                            br
                            | Для выхода из учетной записи нажмите кнопку “Выход”.
                        +e.BUTTON.exit-btn Выход


        +footer()

        +lang-modal()
        +success-modal()

        // build:js js/vendor.js
        script( src="libs/jquery.min.js")
        script( src="libs/three.min.js")
        script( src="libs/dat.gui.min.js")
        script( src="libs/Projector.js")
        script( src="libs/CanvasRenderer.js")
        script( src="libs/jquery-ui.min.js")
        script( src="libs/jquery.ui.touch-punch.min.js")
        script( src="libs/jquery.scrollbar.min.js")
        script( src="libs/jquery.magnific-popup.min.js")
        // endbuild

        // build:js js/main.js
        script( src="js/main.js")
        // endbuild

        script.

            //perlin

            function noise(x, y, z) {
                var p = new Array(512)
                var permutation = [151, 160, 137, 91, 90, 15,
                    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,
                    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,
                    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,
                    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,
                    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,
                    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,
                    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,
                    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,
                    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,
                    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,
                    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,
                    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];
                for (var i = 0; i < 256; i++)
                    p[256 + i] = p[i] = permutation[i];
                var X = Math.floor(x) & 255, Y = Math.floor(y) & 255, Z = Math.floor(z) & 255;
                x -= Math.floor(x);
                y -= Math.floor(y);
                z -= Math.floor(z);
                var u = fade(x), v = fade(y), w = fade(z);
                var A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z,
                    B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;
                return scale(lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),
                    grad(p[BA], x - 1, y, z)),
                    lerp(u, grad(p[AB], x, y - 1, z),
                        grad(p[BB], x - 1, y - 1, z))),
                    lerp(v, lerp(u, grad(p[AA + 1], x, y, z - 1),
                        grad(p[BA + 1], x - 1, y, z - 1)),
                        lerp(u, grad(p[AB + 1], x, y - 1, z - 1),
                            grad(p[BB + 1], x - 1, y - 1, z - 1)))));
            }
            function fade(t) {
                return t * t * t * (t * (t * 6 - 15) + 10);
            }
            function lerp(t, a, b) {
                return a + t * (b - a);
            }
            function grad(hash, x, y, z) {
                var h = hash & 15;
                var u = h < 8 ? x : y,
                    v = h < 4 ? y : h == 12 || h == 14 ? x : z;
                return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
            }
            function scale(n) {
                return (1 + n) / 2;
            };

            //gui

            var move = 0;
            var step = 0;
            var mountHeight = 0;
            var height = 0;

            var goForvard = function () {
                step = step + tochki.vremyaPoleta;
            };
            var goBack = function () {
                step = step - tochki.vremyaPoleta;
            };

            var guiMenu = function () {

                this.SkorostKolebaniy = 5;
                this.VisotaGor = 0;
                this.skorostPoleta = 16;
                this.vremyaPoleta = 18;
                this.GoVpered = function () {
                    step = step + tochki.vremyaPoleta;
                };
                this.podnyatGori = function () {
                    height = height + tochki.visotaPodnyatiya;
                };
                this.skorostPodnyatiya = 1.05;
                this.visotaPodnyatiya = 40;
            };

            var tochki = new guiMenu();
            var gui = new dat.GUI();
            gui.add(tochki, 'SkorostKolebaniy').min(0).max(200).step(1);
            gui.add(tochki, 'VisotaGor').min(1).max(1000).step(1);
            gui.add(tochki, 'GoVpered');
            gui.add(tochki, 'skorostPoleta').min(1).max(200).step(1);
            gui.add(tochki, 'vremyaPoleta').min(1).max(500).step(1);
            gui.add(tochki, 'podnyatGori');
            gui.add(tochki, 'skorostPodnyatiya').min(1.001).max(1.2).step(0.01);
            gui.add(tochki, 'visotaPodnyatiya').min(10).max(200).step(10);

            //gui-end

            //three

            var camera, scene, renderer, geometry, geometry2;

            function init() {

                scene = new THREE.Scene();
                scene.background = new THREE.Color(0x000000);

                renderer = new THREE.WebGLRenderer();
                renderer.setPixelRatio(window.devicePixelRatio);
                renderer.setSize(window.innerWidth, window.innerHeight);

                var container = document.getElementById('container');
                container.appendChild(renderer.domElement);

                camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 1, 3000);
                camera.position.z = 400;
                camera.position.y = 500;
                camera.position.x = 200;

                //Scene-----------------

                var texture = (new THREE.TextureLoader).load("img/num0.png");
                var material = new THREE.PointsMaterial({
                    size: 10,
                    vertexColors: THREE.VertexColors,
                    map: texture,
                    alphaTest: 0.5
                });
                var texture2 = (new THREE.TextureLoader).load("img/numC.png");
                var material2 = new THREE.PointsMaterial({
                    size: 10,
                    vertexColors: THREE.VertexColors,
                    map: texture2,
                    alphaTest: 0.5
                });

                geometry = new THREE.Geometry();
                geometry2 = new THREE.Geometry();

                for (var i = 0; i <= 10000; i++) {
                    geometry.vertices.push(new THREE.Vector3());
                    geometry.colors.push(new THREE.Color());
                }

                for (var j = 0; j <= 10000; j++) {
                    var rand = Math.floor(Math.random() * 2),
                        randCol = ['#ffffff', "#000000"],
                        setColor = randCol[rand];
                    geometry2.vertices.push(new THREE.Vector3());
                    geometry2.colors.push(new THREE.Color(setColor));
                }

                var points = new THREE.Points(geometry, material);
                var points2 = new THREE.Points(geometry2, material2);

                points.rotation.y = 200;
                points2.rotation.y = 200;

                scene.add(points);
                scene.add(points2);

                //Scene-end--------------

                window.addEventListener('resize', onWindowResize, false);
            }

            function onWindowResize() {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            }

            var time = 0

            function animate() {

                time++;
                if (move <= step) {
                    move++
                }
                ;
                if (move > step) {
                    move--
                }
                ;
                if (mountHeight <= height) {
                    mountHeight = (mountHeight + 1) * tochki.skorostPodnyatiya
                }

                requestAnimationFrame(animate);

                if ($(window).width() > 680) {

                    geometry.vertices.forEach(function (particle, index) {
                        var x = Math.floor(index / 150);
                        var y = index % 150;
                        var dx = x / 20,
                            dy = (move / 1000) * tochki.skorostPoleta - y / 20,
                            dz = (time / 10000) * tochki.SkorostKolebaniy;//
                        particle.x = x * 20 - 600;
                        particle.y = (mountHeight * 10 + tochki.VisotaGor) * noise(dx, dy, dz);
                        particle.z = y * 20 - 2200;
                    });

                    geometry2.vertices.forEach(function (particle, index) {
                        var x = Math.floor(index / 150);
                        var y = index % 150;
                        var dx = x / 20,
                            dy = (move / 1000) * tochki.skorostPoleta - y / 20,
                            dz = (time / 10000) * tochki.SkorostKolebaniy;
                        particle.x = x * 20 - 600;
                        particle.y = (mountHeight * 10 + tochki.VisotaGor) * noise(dx, dy, dz);
                        particle.z = y * 20 - 2200;
                    });

                    geometry.verticesNeedUpdate = true;
                    geometry2.verticesNeedUpdate = true;

                    render();

                };

            }

            function render() {
                renderer.render(scene, camera);
            }
            init();
            animate();

            var goForvard = function () {
                step = step + 65;
            };
            var goBack = function () {
                step = step - 65;
            };

            //-load-animate

            var firstPerf = setTimeout(function () {
                height = height + tochki.visotaPodnyatiya;
            }, 500);


            //scroll


            function onePageScroll(element) {

                var settings = {
                        sectionContainer: "section",
                        easing: "ease",
                        animationTime: 500
                    },
                    el = document.querySelector(element),
                    sections = document.querySelectorAll(settings.sectionContainer),
                    topPos = 0,
                    lastAnimation = 0,
                    paginationList = "",
                    body = document.querySelector("body");

                this.init = function () {

                    _addClass(el, "onepage-wrapper")
                    el.style.position = "relative";

                    for (var i = 0; i < sections.length; i++) {
                        _addClass(sections[i], "ops-section")
                        sections[i].dataset.index = i + 1;
                        topPos = topPos + 100;
                        paginationList += "<li><a data-index='" + (i + 1) + "' href='#" + (i + 1) + "'></a></li>";
                    }
                    if (!$(element).hasClass('personal')) {
                        _swipeEvents(el);
                        document.addEventListener("swipeDown", function (event) {
                            if (!_hasClass(body, "disabled-onepage-scroll")) event.preventDefault();
                            moveUp(el);
                        });
                        document.addEventListener("swipeUp", function (event) {
                            if (!_hasClass(body, "disabled-onepage-scroll")) event.preventDefault();
                            moveDown(el);
                        });
                    }

                    var pagination = document.createElement("ul");
                    pagination.setAttribute("class", "onepage-pagination");

                    body.appendChild(pagination)
                    pagination.innerHTML = paginationList;
                    var posTop = (document.querySelector(".onepage-pagination").offsetHeight / 2) * -1;
                    document.querySelector(".onepage-pagination").style.marginTop = posTop;


                    _addClass(document.querySelector(settings.sectionContainer + "[data-index='1']"), "active");
                    _addClass(body, "one-page-scroll");
                    _addClass(document.querySelector(".onepage-pagination li a[data-index='1']"), "active");

                    _paginationHandler = function () {
                        var page_index = this.dataset.index;
                        moveTo(el, page_index);
                        goBack();
                    };

                    var pagination_links = document.querySelectorAll(".onepage-pagination li a");

                    for (var i = 0; i < pagination_links.length; i++) {
                        pagination_links[i].addEventListener('click', _paginationHandler);
                    }


                    if ($(element).hasClass('personal') && $(window).width() < 1560) {
                        //console.log("sss");
                    } else {
                        _mouseWheelHandler = function (event) {
                            event.preventDefault();
                            var delta = event.wheelDelta || -event.detail;
                            if (!_hasClass(body, "disabled-onepage-scroll")) _init_scroll(event, delta);
                        };
                    }


                    document.addEventListener('mousewheel', _mouseWheelHandler);
                    document.addEventListener('DOMMouseScroll', _mouseWheelHandler);

                    _keydownHandler = function (e) {
                        var tag = e.target.tagName.toLowerCase();

                        if (!_hasClass(body, "disabled-onepage-scroll")) {
                            switch (e.which) {
                                case 38:
                                    if (tag != 'input' && tag != 'textarea') moveUp(el)
                                    break;
                                case 40:
                                    if (tag != 'input' && tag != 'textarea') moveDown(el)
                                    break;
                                default:
                                    return;
                            }
                        }
                        return false;
                    };

                    document.onkeydown = _keydownHandler;

                    return false;
                };

                _swipeEvents = function (el) {
                    var startX,
                        startY;

                    document.addEventListener("touchstart", touchstart);

                    function touchstart(event) {
                        var touches = event.touches;
                        if (touches && touches.length) {
                            startX = touches[0].pageX;
                            startY = touches[0].pageY;
                            document.addEventListener("touchmove", touchmove);
                        }
                    }

                    function touchmove(event) {
                        var touches = event.touches;
                        if (touches && touches.length) {
                            event.preventDefault();
                            var deltaX = startX - touches[0].pageX;
                            var deltaY = startY - touches[0].pageY;

                            if (deltaY >= 50) {
                                var event = new Event('swipeUp');
                                document.dispatchEvent(event);
                            }
                            if (deltaY <= -50) {
                                var event = new Event('swipeDown');
                                document.dispatchEvent(event);
                            }
                            if (Math.abs(deltaX) >= 50 || Math.abs(deltaY) >= 50) {
                                document.removeEventListener('touchmove', touchmove);
                            }
                        }
                    }
                };

                _trim = function (str) {
                    return str.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
                };

                _hasClass = function (ele, cls) {
                    if (ele.className) {
                        return ele.className.match(new RegExp('(\\s|^)' + cls + '(\\s|$)'));
                    } else {
                        return ele.className = cls;
                    }
                };

                _addClass = function (ele, cls) {
                    if (!_hasClass(ele, cls)) ele.className += " " + cls;
                    ele.className = _trim(ele.className)
                };

                _removeClass = function (ele, cls) {
                    if (_hasClass(ele, cls)) {
                        var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)');
                        ele.className = ele.className.replace(reg, ' ');
                    }
                    ele.className = _trim(ele.className)
                };

                _whichTransitionEvent = function () {
                    var t;
                    var el = document.createElement('fakeelement');
                    var transitions = {
                        'transition': 'transitionend',
                        'OTransition': 'oTransitionEnd',
                        'MozTransition': 'transitionend',
                        'WebkitTransition': 'webkitTransitionEnd'
                    };
                    for (t in transitions) {
                        if (el.style[t] !== undefined) {
                            return transitions[t];
                        }
                    }
                };

                _scrollTo = function (element, to, duration) {
                    if (duration < 0) return;
                    var difference = to - element.scrollTop;
                    var perTick = difference / duration * 10;

                    setTimeout(function () {
                        element.scrollTop = element.scrollTop + perTick;
                        if (element.scrollTop == to) return;
                        _scrollTo(element, to, duration - 10);
                    }, 10);
                };

                _transformPage = function (el2, settings, pos, index, next_el) {

                    var transformCSS = "-webkit-transform: translate3d(0, " + pos + "%, 0); -webkit-transition: -webkit-transform " + settings.animationTime + "ms " + settings.easing + "; -moz-transform: translate3d(0, " + pos + "%, 0); -moz-transition: -moz-transform " + settings.animationTime + "ms " + settings.easing + "; -ms-transform: translate3d(0, " + pos + "%, 0); -ms-transition: -ms-transform " + settings.animationTime + "ms " + settings.easing + "; transform: translate3d(0, " + pos + "%, 0); transition: transform " + settings.animationTime + "ms " + settings.easing + ";";

                    el2.style.cssText = transformCSS;

                    var transitionEnd = _whichTransitionEvent();
                    el2.addEventListener(transitionEnd, endAnimation, false);

                    function endAnimation() {
                        el2.removeEventListener(transitionEnd, endAnimation)
                    }
                };

                _init_scroll = function (event, delta) {
                    var deltaOfInterest = delta,
                        timeNow = new Date().getTime();
                    if (timeNow - lastAnimation < +settings.animationTime) {
                        event.preventDefault();
                        return;
                    }
                    if (deltaOfInterest < 0) {
                        moveDown(el)
                    } else {
                        moveUp(el)
                    }
                    lastAnimation = timeNow;
                };

                this.moveDown = function (el3) {

                    if (typeof el3 == "string") el3 = document.querySelector(el3);

                    var index = document.querySelector(settings.sectionContainer + ".active").dataset.index,
                        current = document.querySelector(settings.sectionContainer + "[data-index='" + index + "']"),
                        next = document.querySelector(settings.sectionContainer + "[data-index='" + (parseInt(index) + 1) + "']");

                    if (!next) {
                        return
                    } else {
                        pos = (index * 100) * -1;
                    }
                    var next_index = next.dataset.index;
                    _removeClass(current, "active");
                    _addClass(next, "active");

                    _removeClass(document.querySelector(".onepage-pagination li a" + "[data-index='" + index + "']"), "active");
                    _addClass(document.querySelector(".onepage-pagination li a" + "[data-index='" + next_index + "']"), "active");

                    _transformPage(el3, settings, pos, next_index, next);
                    goForvard();
                };

                this.moveUp = function (el4) {

                    if (typeof el4 == "string") el4 = document.querySelector(el4);

                    var index = document.querySelector(settings.sectionContainer + ".active").dataset.index,
                        current = document.querySelector(settings.sectionContainer + "[data-index='" + index + "']"),
                        next = document.querySelector(settings.sectionContainer + "[data-index='" + (parseInt(index) - 1) + "']");

                    if (!next) {
                        return
                    } else {
                        pos = ((next.dataset.index - 1) * 100) * -1;
                    }
                    var next_index = next.dataset.index;
                    _removeClass(current, "active")
                    _addClass(next, "active")

                    _removeClass(document.querySelector(".onepage-pagination li a" + "[data-index='" + index + "']"), "active");
                    _addClass(document.querySelector(".onepage-pagination li a" + "[data-index='" + next_index + "']"), "active");

                    _transformPage(el4, settings, pos, next_index, next);
                    goBack();
                };

                this.moveTo = function (el5, page_index) {

                    if (typeof el5 == "string") el5 = document.querySelector(el5);

                    var current = document.querySelector(settings.sectionContainer + ".active"),
                        next = document.querySelector(settings.sectionContainer + "[data-index='" + (page_index) + "']");

                    if (next) {
                        var next_index = next.dataset.index;
                        _removeClass(current, "active");
                        _addClass(next, "active");
                        _removeClass(document.querySelector(".onepage-pagination li a" + ".active"), "active");
                        _addClass(document.querySelector(".onepage-pagination li a" + "[data-index='" + (page_index) + "']"), "active");

                        pos = ((page_index - 1) * 100) * -1;

                        _transformPage(el5, settings, pos, page_index, next);
                    }
                };

                $('.ancor').on('click', function () {
                    moveTo(el, 3);
                    goBack();
                });

                this.init();
            }

            onePageScroll(".main");


